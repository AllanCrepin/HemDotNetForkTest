@implements IDisposable
@inject ToastService ToastService

<style>

    .toast-container {
        z-index: 1050;
    }

    .toast {
        opacity: 1;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
        min-width: 300px;
        border: none;
        border-radius: 8px;
        overflow: hidden;
        animation: slideIn 0.3s ease-out;
    }

        .toast.hide {
            animation: slideOut 0.3s ease-in forwards;
        }

    .toast-header {
        border-bottom: 1px solid rgba(0, 0, 0, 0.05);
        padding: 0.5rem 0.75rem;
    }

    .toast-body {
        padding: 0.75rem;
        font-size: 0.95rem;
    }

    .btn-close {
        box-shadow: none;
        opacity: 0.7;
    }

        .btn-close:hover {
            opacity: 1;
        }

</style>

<div class="toast-container position-fixed top-0 end-0 p-3">
    @if (isVisible)
    {
        <div class="toast show @BackgroundColorClass" role="alert" aria-live="assertive" aria-atomic="true">
            <div class="toast-header">
                <div class="rounded me-2 @BackgroundIconClass" style="width:20px; height:20px;"></div>
                <strong class="me-auto">@ToastTypeText</strong>
                <button type="button" class="btn-close" @onclick="Close" aria-label="Close"></button>
            </div>
            <div class="toast-body">
                @Message
            </div>
        </div>
    }
</div>

@code {
    private string Message { get; set; }
    private ToastLevel Level { get; set; }
    private bool isVisible { get; set; }

    protected override void OnInitialized()
    {
        ToastService.OnShow += ShowToast;
        ToastService.OnHide += HideToast;
    }

    private void ShowToast(string message, ToastLevel level, int duration)
    {
        Message = message;
        Level = level;
        isVisible = true;
        StateHasChanged();
    }

    private void HideToast()
    {
        isVisible = false;
        StateHasChanged();
    }

    void IDisposable.Dispose()
    {
        if (ToastService != null)
        {
            ToastService.OnShow -= ShowToast;
            ToastService.OnHide -= HideToast;
        }
    }

    private void Close()
    {
        isVisible = false;
    }

    private string BackgroundColorClass => Level switch
    {
        ToastLevel.Success => "bg-success text-white",
        ToastLevel.Info => "bg-info text-white",
        ToastLevel.Warning => "bg-warning text-dark",
        ToastLevel.Error => "bg-danger text-white",
        _ => "bg-info text-white"
    };

    private string BackgroundIconClass => Level switch
    {
        ToastLevel.Success => "bg-success",
        ToastLevel.Info => "bg-info",
        ToastLevel.Warning => "bg-warning",
        ToastLevel.Error => "bg-danger",
        _ => "bg-info"
    };

    private string ToastTypeText => Level switch
    {
        ToastLevel.Success => "Success",
        ToastLevel.Info => "Information",
        ToastLevel.Warning => "Warning",
        ToastLevel.Error => "Error",
        _ => "Information"
    };
}