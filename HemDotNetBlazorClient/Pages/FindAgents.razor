@* Author: Chris *@
@page "/find-agents"
@inject IRealEstateAgentService realEstateAgentService
@inject HttpClient httpClient
@using System.Text.RegularExpressions

<div class="mx-auto" style="width:1000px; margin-bottom:5rem;">

    <h3 class="pt-4 text-center">Hitta mäklare i ditt område</h3>


    <select class="form-select" @onchange="SelectedMunicipalityChanged">

        <option value="">-- Alla kommuner --</option>

        @foreach (var municipality in distinctMunicipalities)
        {
            <option value="@municipality">@municipality</option>
        }
    </select>

    @if (!response.Success)
    {
        <div class="alert alert-danger">
            <h4>@response.Message</h4>
        </div>
    }
    else if (realEstateAgents == null)
    {
        <div class="alert alert-info">
            <h4>Loading data...</h4>
        </div>
    }
    else
    {

        <div class="col-auto agentCards vstack pt-2">
            @foreach (var agent in realEstateAgents)
            {
                <div class="agentCard card mb-3">
                    <div class="card-body d-flex justify-content-between align-items-center gap-4">

                        <!-- User Info Section -->
                        <div class="userInfo d-flex gap-4 align-items-center col-6">
                            <img class="img-thumbnail rounded-circle" style="width: 150px;"
                                 src="@($"{httpClient.BaseAddress}{agent.RealEstateAgentImageUrl}")"
                                 alt="@($"{agent.RealEstateAgentFirstName} profilepic")" />

                            <div class="vstack justify-content-center">
                                <h5 class="card-title"><a href="@($"{"users/"}{"profile/"}{@agent.Id}")"> @agent.RealEstateAgentFirstName @agent.RealEstateAgentLastName</a></h5>
                                <div>@agent.RealEstateAgencyMunicipality</div>
                                <small>@agent.RealEstateAgentEmail</small>
                                <small>@agent.RealEstateAgentPhoneNumber</small>                                

                            </div>
                        </div>

                        <!-- Agency Info Section -->
                        <div class="agencyInfo text-center d-flex flex-column align-items-center col-4">
                            <img class="img" style="width: 100px;"
                                 src="@($"{httpClient.BaseAddress}{agent.RealEstateAgencyLogoUrl}")"
                                 alt="@($"{agent.RealEstateAgentAgencyName} logo")" />
                            <div class="font-weight-bold">@agent.RealEstateAgentAgencyName</div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>

@code {

    private IEnumerable<RealEstateAgentDto> realEstateAgents;
    private Response<IEnumerable<RealEstateAgentDto>> response = new Response<IEnumerable<RealEstateAgentDto>> { Success = true };

    private List<string> distinctMunicipalities = new();


    protected override async Task OnInitializedAsync()
    {

        response = await realEstateAgentService.GetAgentsAsync("", "", "", "", "", "");
        if (response.Success)
        {
            realEstateAgents = response.Data;

            distinctMunicipalities = realEstateAgents
               .GroupBy(p => p.RealEstateAgencyMunicipality)
               .OrderByDescending(p => p.Count())
               .Select(g => $"{g.Key} ({g.Count()})")
               .ToList();
        }
    }

    private async Task SelectedMunicipalityChanged(ChangeEventArgs e)
    {
        string selectedMunicipalityWithCount = "";

        if (e.Value is not null)
        {
            selectedMunicipalityWithCount = (string)e.Value;
        }

        string selectedMunicipality = Regex.Replace(selectedMunicipalityWithCount, @"\s?\(\d+\)", "");

        response = await realEstateAgentService.GetAgentsAsync(
            selectedMunicipality,
            "",
            "",
            "",
            "",
            "");
        if (response.Success)
        {
            realEstateAgents = response.Data;
        }


    }

}
