@page "/users/login"
@inject IAuthenticationService authService
@inject NavigationManager navManager

@* Coder: Adam, Participants: All  *@
@* Co-Author: Allan (utseede + felmeddelanden)*@

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-6 col-lg-5">
            <div class="card shadow">
                <div class="card-header bg-primary text-white">
                    <h3 class="mb-0">Logga in</h3>
                </div>
                <div class="card-body">
                    @if (!string.IsNullOrEmpty(errorMessage))
                    {
                        <div class="alert alert-danger" role="alert">
                            @errorMessage
                        </div>
                    }

                    <EditForm Model="LoginModel" OnValidSubmit="HandleLogin">
                        <DataAnnotationsValidator />
                        <ValidationSummary />
                        <div class="form-group mb-3">
                            <label for="email" class="form-label">E-postadress</label>
                            <InputText id="email" class="form-control" @bind-Value="LoginModel.Email" />
                            <ValidationMessage For="@(() => LoginModel.Email)" class="text-danger" />
                        </div>
                        <div class="form-group mb-3">
                            <label for="password" class="form-label">Lösenord</label>
                            <InputText id="password" class="form-control" type="password" @bind-Value="LoginModel.Password" />
                            <ValidationMessage For="@(() => LoginModel.Password)" class="text-danger" />
                        </div>
                        <div class="d-grid gap-2">
                            <button type="submit" class="btn btn-primary">Logga in</button>
                        </div>
                    </EditForm>
                </div>
                <div class="card-footer text-center">
                    <a href="/users/register">Behöver du ett konto? Registrera dig här</a>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    LoginUserDto LoginModel = new LoginUserDto();
    private string errorMessage = string.Empty;

    public async Task HandleLogin()
    {
        errorMessage = string.Empty;
        try
        {
            var response = await authService.AuthenticateAsync(LoginModel);
            if (response)
            {
                navManager.NavigateTo("/");
            }
            else
            {
                errorMessage = "Felaktiga inloggningsuppgifter. Försök igen!";
            }
        }
        catch (ApiException aex)
        {
            if (aex.StatusCode >= 200 && aex.StatusCode <= 299)
            {
                navManager.NavigateTo("/");
            }
            errorMessage = "Felaktiga inloggningsuppgifter. Försök igen!";
        }
    }
}
