@*Made by Chris*@
@*Co-author: Allan (edit, delete, add, sold buttons, their functionality and styling)*@

@using HemDotNetBlazorClient.Components
@using HemDotNetBlazorClient.Providers
@using HemDotNetBlazorClient.Services
@page "/agent/manage-properties/"
@inject IMarketPropertyService marketPropertyService
@inject ApiAuthenticationStateProvider authStateProvider
@inject HttpClient httpClient

<h3 class="py-4 text-center">Lägg till, redigera eller ta bort objekt</h3>

<ConfirmDialog @ref="confirmDialog" OnConfirm="DeleteConfirmed" OnCancel="CancelDelete" />

@if (!response.Success)
{
    <div class="alert alert-danger">
        <h4>@response.Message</h4>
    </div>
}
else if (marketProperties == null)
{
    <div class="alert alert-info">
        <h4>Loading data...</h4>
    </div>
}
else
{
    <div class="d-flex flex-column align-items-center py-5">
        @foreach (var property in marketProperties)
        {
            <PropertyCard Property="property" />
            <div class="mt-0 d-flex gap-2">
                <button class="btn btn-primary text-white">Redigera</button>
                <!--Temporary, until we have the details page where we can add or delete pics?-->
                
                <a class="btn btn-primary text-white" href="/MarketProperty/@property.MarketPropertyId/Images">
                    Lägg till eller ta bort bilder
                </a>
                
                <button class="btn btn-danger text-white">Radera</button>
                <button class="btn btn-outline-success">Markera som såld</button>
            </div>
        }
        <div class="mt-5">
            <a class="btn btn-primary" href="/MarketProperty/Create">
                <img src="plusicon.svg" alt="Add" class="mx-1" style="width: 1.2em; height: 1.2em; vertical-align: middle;" />
                Lägg till ett nytt objekt
            </a>

        </div>
    </div>
}

@code {

    [Parameter]
    public string? AgentId { get; set; }

    private List<PartialMarketPropertyDTO> marketProperties;
    private Response<List<PartialMarketPropertyDTO>> response = new Response<List<PartialMarketPropertyDTO>> { Success = true };

    protected override async Task OnInitializedAsync()
    {
        var authState = await authStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        var userId = user.FindFirst("uid")?.Value;


        response = await marketPropertyService.GetMarketPropertiesByAgent(userId);

        if (response.Success)
        {
            marketProperties = response.Data;
        }


    }
}
