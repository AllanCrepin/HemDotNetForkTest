@page "/property/edit/{MarketPropertyId:int}"
@inject IMarketPropertyService propertyService
@inject IMunicipalityService municipalityService
@inject NavigationManager navigationManager
@inject ApiAuthenticationStateProvider authStateProvider

@* Author: Johan *@

@if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="container mt-3">
        <div class="alert alert-danger">@errorMessage</div>
    </div>
}
@if (propertyUpdateData != null)
{
    <AuthorizeView Context="authContext">
        <Authorized>
            @if (agentId == @propertyUpdateData.RealEstateAgentId)
            {
                <div class="hero-section container-fluid col-xxl-8 bg-light text-dark py-5">
                    <div class="row justify-content-center">
                        <div class="col-md-6 col-lg-5">
                            <div class="card shadow">
                                <div class="card-header bg-primary text-white">
                                    <h3 class="mb-0">Redigera bostad</h3>
                                </div>
                                <div class="card-body">
                                    <EditForm Model="@propertyUpdateData" OnValidSubmit="@HandleValidSubmit">
                                        <DataAnnotationsValidator />
                                        <ValidationSummary />
                                        <div class="d-flex gap-3">
                                            <div class="mb-3 flex-fill">
                                                <label class="form-label">Kommun</label>
                                                <select class="form-select shadow-sm border-primary rounded-3 fw-semibold text-dark" @bind="propertyUpdateData.MunicipalityId">
                                                    <option value="">Välj kommun</option>
                                                    @foreach (var municipality in allMunicipalities)
                                                    {
                                                        <option value="@municipality.MunicipalityId">@municipality.Name</option>
                                                    }
                                                </select>
                                            </div>

                                            <div class="mb-3 flex-fill">
                                                <label class="form-label">Typ av bostad</label>
                                                <InputSelect class="form-select shadow-sm border-primary rounded-3 fw-semibold text-dark"
                                                             @bind-Value="propertyUpdateData.Category">
                                                    @foreach (PropertyCategory category in Enum.GetValues(typeof(PropertyCategory)))
                                                    {
                                                        <option value="@category">@GetPropertyCategoryDisplayName(category)</option>
                                                    }
                                                </InputSelect>
                                            </div>
                                        </div>

                                        <div class="row mb-3">
                                            <div class="col-md-6 mt-3">
                                                <label class="form-label">Pris</label>
                                                <InputNumber class="form-control shadow-sm border-primary rounded-3 fw-semibold text-dark" @bind-Value="propertyUpdateData.Price" />
                                            </div>
                                            <div class="col-md-6 mt-3">
                                                <label class="form-label">Adress</label>
                                                <InputText class="form-control shadow-sm border-primary rounded-3 fw-semibold text-dark" @bind-Value="propertyUpdateData.PropertyAddress" />
                                            </div>
                                            <div class="col-md-6 mt-3">
                                                <label class="form-label">Boarea (m²)</label>
                                                <InputNumber class="form-control shadow-sm border-primary rounded-3 fw-semibold text-dark" @bind-Value="propertyUpdateData.LivingArea" />
                                            </div>
                                            <div class="col-md-6 mt-3">
                                                <label class="form-label">Tomtarea (m²)</label>
                                                <InputNumber class="form-control shadow-sm border-primary rounded-3 fw-semibold text-dark" @bind-Value="propertyUpdateData.LotArea" />
                                            </div>
                                            <div class="col-md-6 mt-3">
                                                <label class="form-label">Biarea (m²)</label>
                                                <InputNumber class="form-control shadow-sm border-primary rounded-3 fw-semibold text-dark" @bind-Value="propertyUpdateData.AncillaryArea" />
                                            </div>
                                            <div class="col-md-6 mt-3">
                                                <label class="form-label">Antal rum</label>
                                                <InputNumber class="form-control shadow-sm border-primary rounded-3 fw-semibold text-dark" @bind-Value="propertyUpdateData.AmountOfRooms" />
                                            </div>
                                            <div class="col-md-6 mt-3">
                                                <label class="form-label">Månadsavgift (kr)</label>
                                                <InputNumber class="form-control shadow-sm border-primary rounded-3 fw-semibold text-dark" @bind-Value="propertyUpdateData.MonthlyFee" />
                                            </div>
                                            <div class="col-md-6 mt-3">
                                                <label class="form-label">Årlig driftkostnad (kr)</label>
                                                <InputNumber class="form-control shadow-sm border-primary rounded-3 fw-semibold text-dark" @bind-Value="propertyUpdateData.YearlyMaintenanceCost" />
                                            </div>
                                            <div class="col-md-6 mt-3">
                                                <label class="form-label">Byggnadsår</label>
                                                <InputNumber class="form-control shadow-sm border-primary rounded-3 fw-semibold text-dark" @bind-Value="propertyUpdateData.ConstructionYear" />
                                            </div>
                                        </div>

                                        <div class="mb-3">
                                            <label class="form-label">Beskrivning</label>
                                            <InputTextArea class="form-control shadow-sm border-primary rounded-3 fw-semibold text-dark" @bind-Value="propertyUpdateData.Description"
                                                           maxlength="500"
                                                           @oninput="UpdateDescriptionLength" />
                                            <div class="text-end small text-muted mt-1">
                                                @descriptionLength / 500 tecken
                                            </div>
                                        </div>

                                        <button type="submit" class="btn btn-primary w-100 mt-3">Spara ändringar</button>
                                    </EditForm>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
            else
            {
                <div class="alert alert-warning mt-4" role="alert">
                    Du har inte behörighet att redigera denna bostad.
                </div>
            }
        </Authorized>
        <NotAuthorized>
            <div class="alert alert-warning mt-4" role="alert">
                Du måste vara inloggad för att se denna sida.
            </div>
        </NotAuthorized>
    </AuthorizeView>
}
else
{
    <p>Laddar data...</p>
}

@code {
    [Parameter] public int MarketPropertyId { get; set; }

    private MarketPropertyUpdateDto propertyUpdateData;
    private List<MunicipalityDto> allMunicipalities = new();
    private string? errorMessage;
    private string? agentId;
    private int descriptionLength = 0;

    protected override async Task OnInitializedAsync()
    {
        await GetLoggedInAgentId();

        await GetMunicipalities();

        await GetExistingMarketProperty();
    }

    private async Task HandleValidSubmit()
    {
        var response = await propertyService.UpdateMarketProperty(propertyUpdateData);
        if (response.Success)
        {
            navigationManager.NavigateTo($"/property/details/{MarketPropertyId}?successMessage=Bostaden har uppdaterats.");
        }
        else
        {
            errorMessage = response.Message ?? "Uppdateringen misslyckades.";
        }
    }

    private string GetPropertyCategoryDisplayName(PropertyCategory category)
    {
        return category switch
        {
            PropertyCategory.Villa => "Villa",
            PropertyCategory.CondominiumApartment => "Lägenhet",
            PropertyCategory.CondominiumTownhouse => "Radhus",
            PropertyCategory.VacationHome => "Fritidshus",
            _ => category.ToString()
        };
    }

    private async Task GetLoggedInAgentId()
    {
        var authState = await authStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity.IsAuthenticated)
        {
            agentId = user.FindFirst("uid")?.Value;
        }
    }

    private async Task GetMunicipalities()
    {
        var result = await municipalityService.GetAllMunicipalities();
        if (result.Success && result.Data is not null)
        {
            allMunicipalities = result.Data;
        }
        else
        {
            errorMessage = result.Message;
        }
    }

    private async Task GetExistingMarketProperty()
    {
        var response = await propertyService.GetMarketPropertyById(MarketPropertyId);
        if (response.Success && response.Data is not null)
        {
            var data = response.Data;

            var matchedMunicipality = allMunicipalities.FirstOrDefault(m =>
        string.Equals(m.Name.Trim(), data.MunicipalityName.Trim(), StringComparison.OrdinalIgnoreCase));

            propertyUpdateData = new MarketPropertyUpdateDto
                {
                    MarketPropertyId = data.MarketPropertyId,
                    MunicipalityId = matchedMunicipality?.MunicipalityId ?? 0,
                    Category = data.Category,
                    Price = data.Price,
                    LivingArea = data.LivingArea,
                    AncillaryArea = data.AncillaryArea,
                    LotArea = data.LotArea,
                    PropertyAddress = data.PropertyAddress,
                    Description = data.Description,
                    AmountOfRooms = data.AmountOfRooms,
                    MonthlyFee = data.MonthlyFee,
                    YearlyMaintenanceCost = data.YearlyMaintenanceCost,
                    ConstructionYear = data.ConstructionYear,
                    RealEstateAgentId = data.RealEstateAgentId
                };

            descriptionLength = data.Description?.Length ?? 0;
        }
        else
        {
            errorMessage = response.Message ?? "Kunde inte hämta bostadsdata.";
        }
    }

    private void UpdateDescriptionLength(ChangeEventArgs e)
    {
        descriptionLength = e.Value?.ToString()?.Length ?? 0;
    }

}