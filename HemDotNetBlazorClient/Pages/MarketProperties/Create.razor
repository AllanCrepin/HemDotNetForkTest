@page "/MarketProperty/Create"
@inject NavigationManager navigationManager
@inject IMarketPropertyService propertyService
@inject IMunicipalityService municipalityService
@inject ApiAuthenticationStateProvider authStateProvider
@* @attribute [Authorize] *@

@* Author: Johan *@

@if (errorMessage != null)
{
    <div class="alert alert-danger">
        <h4>@errorMessage</h4>
    </div>
}
<AuthorizeView Context="authContext">
    <Authorized>
        <div class="hero-section container-fluid col-xxl-8 bg-light text-dark py-5">
            <div class="row justify-content-center">
                <div class="col-md-6 col-lg-5">
                    <div class="card shadow">
                        <div class="card-header bg-primary text-white">
                            <h3 class="mb-0">Lägg till ny bostad</h3>
                        </div>
                        <div class="card-body">
                        <EditForm Model="@NewMarketProperty" OnValidSubmit="@HandleValidSubmit">
                            <DataAnnotationsValidator />
                            <ValidationSummary />
                            <div class="d-flex gap-3">
                                <div class="mb-3 flex-fill">
                                    <label class="form-label">Kommun</label>
                                    <div>
                                        <select class="form-select shadow-sm border-primary rounded-3 fw-semibold text-dark" @bind="NewMarketProperty.MunicipalityId">
                                            <option value="">Välj kommun</option>
                                            @foreach (var municipality in allMunicipalities)
                                            {
                                                <option value="@municipality.MunicipalityId">@municipality.Name</option>
                                            }
                                        </select>
                                    </div>
                                </div>
                                <div class="mb-3 flex-fill">
                                    <label class="form-label">Typ av bostad</label>
                                    <div>
                                        <select class="form-select shadow-sm border-primary rounded-3 fw-semibold text-dark" @bind="NewMarketProperty.Category">
                                            @foreach (PropertyCategory category in Enum.GetValues(typeof(PropertyCategory)))
                                            {
                                                <option value="@category">@GetPropertyCategoryDisplayName(category)</option>
                                            }
                                        </select>
                                    </div>
                                </div>
                            </div>

                            <div class="row mb-3">
                                <div class="col-md-6 mt-3">
                                    <label class="form-label">Pris</label>
                                    <InputNumber class="form-control shadow-sm border-primary rounded-3 fw-semibold text-dark" @bind-Value="NewMarketProperty.Price" />
                                </div>
                                <div class="col-md-6 mt-3">
                                    <label class="form-label">Adress</label>
                                    <InputText class="form-control shadow-sm border-primary rounded-3 fw-semibold text-dark" @bind-Value="NewMarketProperty.PropertyAddress" />
                                </div>
                                <div class="col-md-6 mt-3">
                                    <label class="form-label">Boarea (m²)</label>
                                    <InputNumber class="form-control shadow-sm border-primary rounded-3 fw-semibold text-dark" @bind-Value="NewMarketProperty.LivingArea" />
                                </div>
                                <div class="col-md-6 mt-3">
                                    <label class="form-label">Tomtarea (m²)</label>
                                    <InputNumber class="form-control shadow-sm border-primary rounded-3 fw-semibold text-dark" @bind-Value="NewMarketProperty.LotArea" />
                                </div>
                                <div class="col-md-6 mt-3">
                                    <label class="form-label">Biarea (m²)</label>
                                    <InputNumber class="form-control shadow-sm border-primary rounded-3 fw-semibold text-dark" @bind-Value="NewMarketProperty.AncillaryArea" />
                                </div>
                                <div class="col-md-6 mt-3">
                                    <label class="form-label">Antal rum</label>
                                    <InputNumber class="form-control shadow-sm border-primary rounded-3 fw-semibold text-dark" @bind-Value="NewMarketProperty.AmountOfRooms" />
                                </div>
                                <div class="col-md-6 mt-3">
                                    <label class="form-label">Månadsavgift (kr)</label>
                                    <InputNumber class="form-control shadow-sm border-primary rounded-3 fw-semibold text-dark" @bind-Value="NewMarketProperty.MonthlyFee" />
                                </div>
                                <div class="col-md-6 mt-3">
                                    <label class="form-label">Årlig driftkostnad (kr)</label>
                                    <InputNumber class="form-control shadow-sm border-primary rounded-3 fw-semibold text-dark" @bind-Value="NewMarketProperty.YearlyMaintenanceCost" />
                                </div>
                                <div class="col-md-6 mt-3">
                                    <label class="form-label">Byggnadsår</label>
                                    <InputNumber class="form-control shadow-sm border-primary rounded-3 fw-semibold text-dark" @bind-Value="NewMarketProperty.ConstructionYear" />
                                </div>
                            </div>

                            <div class="mb-3">
                                <label class="form-label">Beskrivning</label>
                                <InputTextArea class="form-control shadow-sm border-primary rounded-3 fw-semibold text-dark" @bind-Value="NewMarketProperty.Description" />
                            </div>

                            <button type="submit" class="btn btn-primary w-100 mt-3">Spara bostad</button>
                        </EditForm>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </Authorized>
    <NotAuthorized>
        <div class="alert alert-warning mt-4" role="alert">
            Du måste vara inloggad för att se denna sida.
        </div>
    </NotAuthorized>
</AuthorizeView>

@code {
    private List<MunicipalityDto> allMunicipalities = new();
    private MarketPropertyCreateDto NewMarketProperty = new();
    private string? errorMessage;
    private Response<int> response = new Response<int> { Success = true };

    protected override async Task OnInitializedAsync()
    {
        await GetMunicipalities();

        await GetLoggedInAgentId();
    }

    private string GetPropertyCategoryDisplayName(PropertyCategory category) =>
        category switch
        {
            PropertyCategory.Villa => "Villa",
            PropertyCategory.CondominiumApartment => "Lägenhet",
            PropertyCategory.CondominiumTownhouse => "Radhus",
            PropertyCategory.VacationHome => "Fritidshus",
            _ => category.ToString()
        };

    private async Task HandleValidSubmit()
    {
        try
        {
            response = await propertyService.CreateMarketProperty(NewMarketProperty);

            if (response.Success)
            {
                var newId = response.Data;
                navigationManager.NavigateTo($"/property/details/{newId}?successMessage=Bostaden har skapats.");
            }
            else
            {
                errorMessage = response.Message;
                Console.WriteLine(errorMessage);
            }
        }
        catch (ApiException ex)
        {
            errorMessage = $"Ett fel inträffade: {ex.StatusCode} - {ex.Message}";
            Console.WriteLine(errorMessage);
        }
    }

    private async Task GetMunicipalities()
    {
        var result = await municipalityService.GetAllMunicipalities();
        if (result.Success && result.Data is not null)
        {
            allMunicipalities = result.Data ?? new List<MunicipalityDto>();
        }
        else
        {
            errorMessage = result.Message;
        }
    }

    private async Task GetLoggedInAgentId()
        {
        var authState = await authStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity.IsAuthenticated)
        {
            var userId = user.FindFirst("uid")?.Value;
            NewMarketProperty.RealEstateAgentId = userId;
        }
    }
}
