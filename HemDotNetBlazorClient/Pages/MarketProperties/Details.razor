@page "/property/details/{MarketPropertyId:int}"
@inject IMarketPropertyService propertyService
@inject IPropertyImageService propertyImageService
@inject IRealEstateAgentService realEstateAgentService
@inject ApiAuthenticationStateProvider authStateProvider
@inject NavigationManager navigationManager
@inject HttpClient httpClient

@* Author: Johan *@
@* Co-Author: Allan (change up the design a bit) *@


<style>
    .property-carousel {
        aspect-ratio: 16 / 9;
        overflow: hidden;
        border-radius: 0.5rem;
    }

    .property-carousel .carousel-item img {
        height: 100%;
        width: 100%;
        object-fit: cover;
    }

    .agent-image {
        width: 5rem;
        height: 5rem;
        object-fit: cover;
    }

    .property-specs dt {
        color: #6c757d;
        font-weight: normal;
    }

    .property-specs dd {
        font-weight: 600;
    }
</style>


@if (!string.IsNullOrEmpty(successMessage))
{
    <div class="toast-container position-fixed top-0 end-0 p-3">
        <div class="toast show" role="alert" aria-live="assertive" aria-atomic="true">
            <div class="toast-header bg-success text-white">
                <strong class="me-auto">Success</strong>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="toast" aria-label="Close"></button>
            </div>
            <div class="toast-body">
                @successMessage
            </div>
        </div>
    </div>
}

@if (errorMessage != null)
{
    <div class="alert alert-danger shadow-sm mb-4">
        <div class="d-flex align-items-center">
            <i class="bi bi-exclamation-triangle-fill me-2"></i>
            <h5 class="mb-0">@errorMessage</h5>
        </div>
    </div>
}

@if (marketProperty == null)
{
    <div class="container py-5 text-center">
        <div class="spinner-border text-primary" role="status">
            <span class="visually-hidden">Loading property details...</span>
        </div>
        <p class="mt-3">Loading property details...</p>
    </div>
}
else
{
    <div class="container w-75 py-5">
        <div class="row g-4">
            <div class="col-lg-8">
                <div class="card shadow-sm mb-4">
                    <div class="card-body p-0">
                        <div id="propertyCarousel" class="carousel slide" data-bs-ride="carousel">
                            <div class="carousel-inner rounded-top">
                                @for (int i = 0; i < images.Count; i++)
                                {
                                    <div class="carousel-item @(i == 0 ? "active" : "")" style="aspect-ratio: 16/9;">
                                        <img src="@($"{httpClient.BaseAddress}{images[i].ImageUrl}")" class="d-block w-100 h-100 object-fit-cover" alt="Property image">
                                    </div>
                                }
                                @if (images.Count <= 0)
                                {
                                    <div class="carousel-item active bg-light d-flex justify-content-center align-items-center" style="aspect-ratio: 16/9;">
                                        <div class="text-center">
                                            <i class="bi bi-image fs-1 text-muted"></i>
                                            <p class="mt-2 text-muted">Inga bilder tillgängliga</p>
                                        </div>
                                    </div>
                                }
                            </div>
                            <button class="carousel-control-prev" type="button" data-bs-target="#propertyCarousel" data-bs-slide="prev">
                                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                                <span class="visually-hidden">Previous</span>
                            </button>
                            <button class="carousel-control-next" type="button" data-bs-target="#propertyCarousel" data-bs-slide="next">
                                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                                <span class="visually-hidden">Next</span>
                            </button>
                            <div class="carousel-indicators">
                                @for (int i = 0; i < images.Count; i++)
                                {
                                    <button type="button" data-bs-target="#propertyCarousel" data-bs-slide-to="@i" class="@(i == 0 ? "active" : "")" aria-current="@(i == 0 ? "true" : "false")" aria-label="Slide @(i+1)"></button>
                                }
                            </div>
                        </div>
                    </div>
                </div>

                <div class="d-flex justify-content-between align-items-center mb-4">
                    <div>
                        <h1 class="fs-2 fw-bold mb-0">@marketProperty.PropertyAddress</h1>
                        <p class="text-muted mb-0">@marketProperty.MunicipalityName</p>
                    </div>
                    <div class="text-end">
                        <h2 class="fs-3 fw-bold text-primary mb-0">@marketProperty.Price.ToString("C0")</h2>
                    </div>
                </div>

                <div class="d-flex gap-2 mb-4">
                    <NavLink class="btn btn-primary" target="_blank"
                             href="@($"/property/details/images/{MarketPropertyId}?PropertyAddress={Uri.EscapeDataString(marketProperty.PropertyAddress)}")">
                        <i class="bi bi-images me-2"></i>Visa alla bilder
                    </NavLink>

                    <a class="text-primary mb-1 mt-1 mx-2"
                       href="@($"https://www.google.com/maps/place/{marketProperty.MunicipalityName}")"
                       target="_blank"
                       rel="noopener noreferrer">
                        <strong><u>Visa på karta</u></strong>
                    </a>
                </div>


                <div class="row mb-4">

                    <div class="col-md-6 mb-3 mb-md-0">
                        <div class="card shadow-sm h-100">
                            <div class="card-header bg-white">
                                <h3 class="fs-5 fw-bold mb-0">Om bostaden</h3>
                            </div>
                            <div class="card-body">
                                <p>@marketProperty.Description</p>
                            </div>
                        </div>
                    </div>


                    <div class="col-md-6">
                        <div class="card shadow-sm h-100">
                            <div class="card-header bg-white">
                                <h3 class="fs-5 fw-bold mb-0">Specifikationer</h3>
                            </div>
                            <div class="card-body">
                                <dl class="row mb-0">
                                    <dt class="col-6 text-muted fw-normal">Bostadstyp</dt>
                                    <dd class="col-6 fw-semibold">@GetPropertyCategoryDisplayName(@marketProperty.Category)</dd>

                                    <dt class="col-6 text-muted fw-normal">Antal rum</dt>
                                    <dd class="col-6 fw-semibold">@marketProperty.AmountOfRooms rum</dd>

                                    <dt class="col-6 text-muted fw-normal">Boarea</dt>
                                    <dd class="col-6 fw-semibold">@marketProperty.LivingArea m²</dd>

                                    <dt class="col-6 text-muted fw-normal">Biarea</dt>
                                    <dd class="col-6 fw-semibold">@marketProperty.AncillaryArea m²</dd>

                                    <dt class="col-6 text-muted fw-normal">Tomtarea</dt>
                                    <dd class="col-6 fw-semibold">@marketProperty.LotArea m²</dd>

                                    <dt class="col-6 text-muted fw-normal">Byggår</dt>
                                    <dd class="col-6 fw-semibold">@marketProperty.ConstructionYear</dd>

                                    <dt class="col-6 text-muted fw-normal">Driftkostnad</dt>
                                    <dd class="col-6 fw-semibold">@marketProperty.YearlyMaintenanceCost kr/år</dd>
                                </dl>
                            </div>
                        </div>
                    </div>
                </div>
            </div>


            <div class="col-lg-4">

                <div class="card shadow-sm mb-4">
                    <div class="card-header bg-white">
                        <h3 class="fs-5 fw-bold mb-0">Kontakta mäklaren</h3>
                    </div>
                    <div class="card-body">
                        <div class="d-flex align-items-center mb-3">
                            <div class="me-auto">
                                <NavLink href="@($"/users/profile/{marketProperty.RealEstateAgentId}")">
                                    <h4 class="fs-5 fw-bold mb-1">@marketProperty.RealEstateAgentFullName</h4>
                                </NavLink>
                                <p class="mb-0 text-muted">@realEstateAgent.RealEstateAgentAgencyName</p>
                                <p class="mb-0 text-muted small">@realEstateAgent.RealEstateAgencyMunicipality</p>
                            </div>

                            <img src="@($"{httpClient.BaseAddress}{realEstateAgent.RealEstateAgentImageUrl}")"
                                 class="rounded-circle ms-3"
                                 alt="@marketProperty.RealEstateAgentFullName"
                                 style="width: 5rem; height: 5rem; object-fit: cover;" />
                        </div>
                        <div class="d-grid gap-2">
                            <button class="btn btn-primary d-flex justify-content-center align-items-center" @onclick="TogglePhone">
                                📞 @(showPhone ? realEstateAgent.RealEstateAgentPhoneNumber : "Visa telefonnummer")
                            </button>

                            <button class="btn btn-primary d-flex justify-content-center align-items-center" @onclick="ToggleEmail">
                                ✉️ @(showEmail ? realEstateAgent.RealEstateAgentEmail : "Visa e-post")
                            </button>
                        </div>
                    </div>
                </div>


                @if (agentId == marketProperty.RealEstateAgentId)
                {
                    <div class="card shadow-sm mb-4">
                        <div class="card-header bg-white">
                            <h3 class="fs-5 fw-bold mb-0">Hantera annons</h3>
                        </div>
                        <div class="card-body">
                            <div class="d-grid gap-2">

                                <NavLink class="btn btn-primary" href="@($"/property/manage-images/{MarketPropertyId}")">
                                    <i class="bi bi-images me-2"></i>Hantera bilder
                                </NavLink>

                                <NavLink class="btn btn-primary" href="@($"/property/edit/{MarketPropertyId}")">
                                    <i class="bi bi-pencil-square me-2"></i>Redigera bostad
                                </NavLink>
                            </div>
                        </div>
                    </div>
                }


                <div class="card shadow-sm">
                    <div class="card-header bg-white">
                        <h3 class="fs-5 fw-bold mb-0">Utforska mer</h3>
                    </div>
                    <div class="card-body">
                        <div class="d-grid">

                            <NavLink class="btn btn-primary" href="@($"/SearchResults?area={marketProperty.MunicipalityName}&showAllTypes=true&newProduction=false")">
                                <i class="bi bi-houses me-2"></i>Till salu i @marketProperty.MunicipalityName
                            </NavLink>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@code {
    [Parameter] public int MarketPropertyId { get; set; }
    private MarketPropertyDetailsDto marketProperty;
    private List<PropertyImageDto> images;
    private RealEstateAgentDto realEstateAgent;
    private string? agentId;
    private string? successMessage;
    private string? errorMessage;
    private bool showPhone = false;
    private bool showEmail = false;

    protected override async Task OnInitializedAsync()
    {
        await GetLoggedInAgentId();

        await GetMarketProperty();

        await GetImages();

        await GetRealEstateAgent();

        HandleSuccessMessage();
    }

    private void HandleSuccessMessage()
    {
        //If user is redirected after a Create action, display the successMessage passed in the url.
        var uri = navigationManager.ToAbsoluteUri(navigationManager.Uri);
        if (QueryHelpers.ParseQuery(uri.Query).TryGetValue("successMessage", out var message))
        {
            successMessage = message;

            var cleanUri = uri.GetLeftPart(UriPartial.Path);
            navigationManager.NavigateTo(cleanUri, forceLoad: false);
        }
    }

    private void TogglePhone()
    {
        showPhone = !showPhone;
    }

    private void ToggleEmail()
    {
        showEmail = !showEmail;
    }

    private string GetPropertyCategoryDisplayName(PropertyCategory category)
    {
        return category switch
        {
            PropertyCategory.Villa => "Villa",
            PropertyCategory.CondominiumApartment => "Lägenhet",
            PropertyCategory.CondominiumTownhouse => "Radhus",
            PropertyCategory.VacationHome => "Fritidshus",
            _ => category.ToString()
        };
    }

    private async Task GetLoggedInAgentId()
    {
        var authState = await authStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity.IsAuthenticated)
        {
            var userId = user.FindFirst("uid")?.Value;
            agentId = userId;
        }
    }

    private async Task GetMarketProperty()
    {
        var response = await propertyService.GetMarketPropertyById(MarketPropertyId);
        if (response.Success)
        {
            marketProperty = response.Data;
        }
        else
        {
            errorMessage = response.Message;
        }
    }

    private async Task GetImages()
    {
        var response = await propertyImageService.GetPropertyImages(MarketPropertyId);
        if (response.Success)
        {
            images = response.Data;
        }
        else
        {
            errorMessage = response.Message;
        }
    }

    private async Task GetRealEstateAgent()
    {
        var response = await realEstateAgentService.GetAgentByIdAsync(marketProperty.RealEstateAgentId);
        if (response.Success)
        {
            realEstateAgent = response.Data;
        }
        else
        {
            errorMessage = response.Message;
        }
    }
}
