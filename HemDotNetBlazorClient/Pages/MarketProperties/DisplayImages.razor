@page "/property/details/images/{MarketPropertyId:int}"
@inject HttpClient httpClient
@inject IPropertyImageService propertyImageService
@inject NavigationManager navigationManager

@* Author: Johan *@

@if (errorMessage != null)
{
    <div class="alert alert-danger">@errorMessage</div>
}

<h2 class="text-primary text-center mt-3"><strong>@PropertyAddress</strong></h2>
<div class="container mt-4">
    @if (images != null)
    {
        @foreach (var image in images)
        {
            <div class="mb-4">
                <img src="@($"{httpClient.BaseAddress}{image.ImageUrl}")"
                     class="img-fluid rounded shadow-sm w-100"
                     style="max-width: 900px; display: block; margin-left: auto; margin-right: auto;"
                     alt="Property image" />
            </div>
        }
    }
    else if (errorMessage == null)
    {
        <p>Laddar bilder...</p>
    }
</div>

@code {
    [Parameter]
    public int MarketPropertyId { get; set; }
    [Parameter]
    [SupplyParameterFromQuery]
    public string? PropertyAddress { get; set; }

    private List<PropertyImageDto> images;
    private string errorMessage;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var response = await propertyImageService.GetPropertyImages(MarketPropertyId);

            if (response.Success)
            {
                images = response.Data;
            }
            else
            {
                errorMessage = response.Message;
            }

        }
        catch (Exception ex)
        {
            errorMessage = $"An error occurred while loading images: {ex.Message}";
        }
    }
}